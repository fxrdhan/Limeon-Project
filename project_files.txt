.
├── .env
├── eslint.config.js
├── get-all
├── get-database
├── .gitignore
├── image.png
├── index.html
├── package.json
├── project_files.txt
├── public
├── README.md
├── src
│   ├── App.css
│   ├── App.tsx
│   ├── assets
│   ├── components
│   │   ├── layout
│   │   │   ├── MainLayout.tsx
│   │   │   ├── Navbar.tsx
│   │   │   └── Sidebar.tsx
│   │   ├── purchases
│   │   │   ├── InvoiceLayout.tsx
│   │   │   ├── ItemSearchBar.tsx
│   │   │   ├── PurchaseInfoForm.tsx
│   │   │   └── PurchaseItemsTable.tsx
│   │   ├── tools
│   │   │   └── UnitConversionManager.tsx
│   │   └── ui
│   │       ├── AddItemCard.tsx
│   │       ├── Badge.tsx
│   │       ├── Button.tsx
│   │       ├── Card.tsx
│   │       ├── ConfirmDialog.tsx
│   │       ├── DetailEditModal.tsx
│   │       ├── FormActions.tsx
│   │       ├── FormComponents.tsx
│   │       ├── ImageCard.tsx
│   │       ├── Input.tsx
│   │       ├── Loading.tsx
│   │       ├── OfflineAlert.tsx
│   │       ├── Pagination.tsx
│   │       └── Table.tsx
│   ├── hooks
│   │   ├── useAddItemForm.ts
│   │   ├── useItemSelection.ts
│   │   ├── usePurchaseForm.ts
│   │   └── useUnitConversion.ts
│   ├── index.css
│   ├── lib
│   │   ├── classNames.ts
│   │   ├── formatters.ts
│   │   ├── prefetchQueries.ts
│   │   ├── queryUtils.ts
│   │   └── supabase.ts
│   ├── main.tsx
│   ├── output.css
│   ├── pages
│   │   ├── auth
│   │   │   └── Login.tsx
│   │   ├── dashboard
│   │   │   └── Dashboard.tsx
│   │   ├── master-data
│   │   │   ├── AddItem.tsx
│   │   │   ├── CategoryList.tsx
│   │   │   ├── ItemList.tsx
│   │   │   ├── SupplierList.tsx
│   │   │   ├── TypeList.tsx
│   │   │   └── UnitList.tsx
│   │   ├── purchases
│   │   │   ├── CreatePurchase.tsx
│   │   │   ├── PrintPurchase.tsx
│   │   │   ├── PurchaseList.tsx
│   │   │   ├── UploadInvoice.tsx
│   │   │   └── ViewPurchase.tsx
│   │   ├── sales
│   │   │   └── CreateSale.tsx
│   │   └── settings
│   │       └── Profile.tsx
│   ├── services
│   │   └── invoiceService.ts
│   ├── store
│   │   └── authStore.ts
│   └── vite-env.d.ts
├── supabase_data
│   ├── company_profiles.json
│   ├── database_export
│   ├── database_export.json
│   ├── database_funcions
│   ├── database_triggers
│   ├── definitions
│   ├── doctors.json
│   ├── e_invoice_items.json
│   ├── e_invoices.json
│   ├── item_categories.json
│   ├── items.json
│   ├── item_types.json
│   ├── item_units.json
│   ├── patients.json
│   ├── purchase_items.json
│   ├── purchases.json
│   ├── sale_items.json
│   ├── sales.json
│   ├── suppliers.json
│   ├── unit_conversions.json
│   └── users.json
├── tailwind.config.js
├── test.js
├── tsconfig.app.json
├── tsconfig.json
├── tsconfig.node.json
├── vite.config.ts
└── yarn.lock

21 directories, 92 files


===============================================
= File: ./.env 
===============================================

     1	VITE_SUPABASE_URL=https://psqmckbtwqphcteymjil.supabase.co
     2	VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBzcW1ja2J0d3FwaGN0ZXltamlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxOTQ2MjAsImV4cCI6MjA1Nzc3MDYyMH0.wvxpldpaoanDk9Wd7wDUeeCuMSVw9e0pxE7_BMt823s


===============================================
= File: ./eslint.config.js 
===============================================

     1	import js from '@eslint/js'
     2	import globals from 'globals'
     3	import reactHooks from 'eslint-plugin-react-hooks'
     4	import reactRefresh from 'eslint-plugin-react-refresh'
     5	import tseslint from 'typescript-eslint'
     6	
     7	export default tseslint.config(
     8	  { ignores: ['dist'] },
     9	  {
    10	    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    11	    files: ['**/*.{ts,tsx}'],
    12	    languageOptions: {
    13	      ecmaVersion: 2020,
    14	      globals: globals.browser,
    15	    },
    16	    plugins: {
    17	      'react-hooks': reactHooks,
    18	      'react-refresh': reactRefresh,
    19	    },
    20	    rules: {
    21	      ...reactHooks.configs.recommended.rules,
    22	      'react-refresh/only-export-components': [
    23	        'warn',
    24	        { allowConstantExport: true },
    25	      ],
    26	    },
    27	  },
    28	)


===============================================
= File: ./get-all 
===============================================

     1	#!/bin/bash
     2	
     3	# Fungsi untuk menampilkan pesan verbose
     4	verbose() {
     5	    echo "[INFO] $1"
     6	}
     7	
     8	# Nama file output dan pengaturan
     9	OUTPUT_FILE="project_files.txt"
    10	EXCLUDE_DIRS="node_modules|.git"
    11	EXCLUDE_FILES=("./src/output.css" "./yarn.lock" "./image.png")
    12	verbose "Output ke: $OUTPUT_FILE"
    13	verbose "Mengecualikan direktori: $EXCLUDE_DIRS"
    14	verbose "Mengecualikan file: ${EXCLUDE_FILES[*]}"
    15	verbose "Mengecualikan file JSON dari folder ./supabase_data"
    16	
    17	# Hapus file output jika sudah ada
    18	[ -f "$OUTPUT_FILE" ] && rm "$OUTPUT_FILE" && verbose "Menghapus file output lama"
    19	
    20	# Buat struktur direktori
    21	verbose "Membuat struktur direktori..."
    22	tree -I "$EXCLUDE_DIRS" -a > "$OUTPUT_FILE" && verbose "Struktur direktori telah disimpan"
    23	
    24	# Buat find command
    25	FIND_CMD="find . -type f -not -path \"./node_modules/*\" -not -path \"./.git/*\" -not -path \"./project_files.txt\""
    26	for EXCL in "${EXCLUDE_FILES[@]}"; do
    27	    FIND_CMD+=" -not -path \"$EXCL\""
    28	done
    29	
    30	# Tambahkan pengecualian untuk file JSON di folder supabase_data
    31	FIND_CMD+=" -not -path \"./supabase_data/*.json\""
    32	
    33	# Temukan dan hitung file
    34	verbose "Menghitung file..."
    35	TOTAL_FILES=$(eval "$FIND_CMD" | wc -l)
    36	verbose "Total file yang akan diproses: $TOTAL_FILES"
    37	
    38	# Inisialisasi counter
    39	COUNT=0
    40	
    41	# Proses semua file
    42	verbose "Mulai memproses file..."
    43	eval "$FIND_CMD" | sort | while IFS= read -r FILE; do
    44	    ((COUNT++))
    45	    verbose "[$COUNT/$TOTAL_FILES] Memproses: $FILE"
    46	    
    47	    echo -e "\n\n===============================================" >> "$OUTPUT_FILE"
    48	    echo -e "= File: $FILE " >> "$OUTPUT_FILE"
    49	    echo -e "===============================================\n" >> "$OUTPUT_FILE"
    50	    nl -ba "$FILE" >> "$OUTPUT_FILE"
    51	done
    52	
    53	verbose "Proses selesai. Hasil tersimpan di $OUTPUT_FILE"


===============================================
= File: ./get-database 
===============================================

     1	#!/bin/bash
     2	# Konfigurasi Supabase
     3	SUPABASE_URL="https://psqmckbtwqphcteymjil.supabase.co"
     4	SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBzcW1ja2J0d3FwaGN0ZXltamlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxOTQ2MjAsImV4cCI6MjA1Nzc3MDYyMH0.wvxpldpaoanDk9Wd7wDUeeCuMSVw9e0pxE7_BMt823s"
     5	
     6	# Buat direktori output jika belum ada
     7	OUTPUT_DIR="supabase_data"
     8	mkdir -p "$OUTPUT_DIR"
     9	
    10	# Daftar tabel yang diketahui
    11	TABLES=(
    12	  "doctors"
    13	  "item_categories"
    14	  "item_types"
    15	  "item_units"
    16	  "items"
    17	  "patients"
    18	  "purchase_items"
    19	  "purchases"
    20	  "sale_items"
    21	  "sales"
    22	  "suppliers"
    23	  "unit_conversions"
    24	  "users"
    25	  "e_invoices"
    26	  "e_invoice_items"
    27	  "company_profiles"
    28	)
    29	
    30	# Buat objek JSON utama
    31	echo "{" > "$OUTPUT_DIR/database_export.json"
    32	echo "  \"export_date\": \"$(date -u '+%Y-%m-%dT%H:%M:%SZ')\"," >> "$OUTPUT_DIR/database_export.json"
    33	echo "  \"tables\": {" >> "$OUTPUT_DIR/database_export.json"
    34	
    35	# Loop melalui setiap tabel
    36	TABLE_COUNT=${#TABLES[@]}
    37	CURRENT_TABLE=0
    38	
    39	for TABLE in "${TABLES[@]}"; do
    40	  CURRENT_TABLE=$((CURRENT_TABLE + 1))
    41	  echo "Mengunduh data tabel: $TABLE"
    42	  
    43	  # Ambil data dari tabel
    44	  RESPONSE=$(curl "$SUPABASE_URL/rest/v1/$TABLE?select=*" \
    45	    -H "apikey: $SUPABASE_KEY" \
    46	    -H "Authorization: Bearer $SUPABASE_KEY" \
    47	    -s)
    48	    
    49	  # Simpan ke file JSON individual
    50	  echo "$RESPONSE" | jq . > "$OUTPUT_DIR/$TABLE.json"
    51	  
    52	  # Tambahkan ke file JSON gabungan
    53	  echo "    \"$TABLE\": $(echo "$RESPONSE" | jq .)" >> "$OUTPUT_DIR/database_export.json"
    54	  
    55	  # Tambahkan koma jika bukan tabel terakhir
    56	  if [ $CURRENT_TABLE -lt $TABLE_COUNT ]; then
    57	    echo "," >> "$OUTPUT_DIR/database_export.json"
    58	  fi
    59	  
    60	  echo "✓ Data $TABLE berhasil diproses"
    61	done
    62	
    63	# Tutup objek JSON
    64	echo "  }" >> "$OUTPUT_DIR/database_export.json"
    65	echo "}" >> "$OUTPUT_DIR/database_export.json"
    66	
    67	# Format JSON akhir agar lebih rapi
    68	jq . "$OUTPUT_DIR/database_export.json" > "$OUTPUT_DIR/temp.json" && mv "$OUTPUT_DIR/temp.json" "$OUTPUT_DIR/database_export.json"
    69	
    70	echo "Semua data telah diunduh ke direktori $OUTPUT_DIR"
    71	echo "Ekspor gabungan disimpan di $OUTPUT_DIR/database_export.json"


===============================================
= File: ./.gitignore 
===============================================

     1	# Logs
     2	logs
     3	*.log
     4	npm-debug.log*
     5	yarn-debug.log*
     6	yarn-error.log*
     7	pnpm-debug.log*
     8	lerna-debug.log*
     9	
    10	node_modules
    11	dist
    12	dist-ssr
    13	*.local
    14	
    15	# Editor directories and files
    16	.vscode/*
    17	!.vscode/extensions.json
    18	.idea
    19	.DS_Store
    20	*.suo
    21	*.ntvs*
    22	*.njsproj
    23	*.sln
    24	*.sw?


===============================================
= File: ./index.html 
===============================================

     1	<!doctype html>
     2	<html lang="en">
     3	  <head>
     4	    <meta charset="UTF-8" />
     5	    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
     6	    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
     7	    <link href="../src/output.css" rel="stylesheet">
     8	    <!-- <title>Vite + React + TS</title> -->
     9	  </head>
    10	  <body>
    11	    <div id="root"></div>
    12	    <script type="module" src="/src/main.tsx"></script>
    13	  </body>
    14	</html>


===============================================
= File: ./package.json 
===============================================

     1	{
     2	  "$schema": "https://json.schemastore.org/package.json",
     3	  "name": "apotek-klinik-app",
     4	  "private": true,
     5	  "version": "0.0.0",
     6	  "type": "module",
     7	  "scripts": {
     8	    "dev": "vite",
     9	    "build": "tsc -b && vite build",
    10	    "lint": "eslint .",
    11	    "preview": "vite preview"
    12	  },
    13	  "dependencies": {
    14	    "@headlessui/react": "^2.2.1",
    15	    "@supabase/supabase-js": "^2.49.3",
    16	    "@tanstack/react-query": "^5.72.2",
    17	    "@tanstack/react-query-devtools": "^5.72.2",
    18	    "@tanstack/react-query-persist-client": "^5.72.2",
    19	    "@tanstack/react-table": "^8.21.2",
    20	    "arktype": "^2.1.19",
    21	    "autoprefixer": "^10.4.21",
    22	    "axios": "^1.8.4",
    23	    "chart.js": "^4.4.8",
    24	    "framer-motion": "^12.6.5",
    25	    "postcss": "^8.5.3",
    26	    "react": "^19.0.0",
    27	    "react-chartjs-2": "^5.3.0",
    28	    "react-dom": "^19.0.0",
    29	    "react-fast-marquee": "^1.6.5",
    30	    "react-icons": "^5.5.0",
    31	    "react-router-dom": "^6.30.0",
    32	    "zustand": "^5.0.3"
    33	  },
    34	  "devDependencies": {
    35	    "@eslint/js": "^9.21.0",
    36	    "@types/react": "^19.0.10",
    37	    "@types/react-dom": "^19.0.4",
    38	    "@vitejs/plugin-react": "^4.3.4",
    39	    "eslint": "^9.21.0",
    40	    "eslint-plugin-react-hooks": "^5.1.0",
    41	    "eslint-plugin-react-refresh": "^0.4.19",
    42	    "globals": "^15.15.0",
    43	    "tailwindcss": "^3.4.17",
    44	    "typescript": "^5.8.3",
    45	    "typescript-eslint": "^8.24.1",
    46	    "vite": "^6.2.0"
    47	  }
    48	}


===============================================
= File: ./README.md 
===============================================

     1	# React + TypeScript + Vite
     2	
     3	This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
     4	
     5	Currently, two official plugins are available:
     6	
     7	- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
     8	- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
     9	
    10	## Expanding the ESLint configuration
    11	
    12	If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:
    13	
    14	```js
    15	export default tseslint.config({
    16	  extends: [
    17	    // Remove ...tseslint.configs.recommended and replace with this
    18	    ...tseslint.configs.recommendedTypeChecked,
    19	    // Alternatively, use this for stricter rules
    20	    ...tseslint.configs.strictTypeChecked,
    21	    // Optionally, add this for stylistic rules
    22	    ...tseslint.configs.stylisticTypeChecked,
    23	  ],
    24	  languageOptions: {
    25	    // other options...
    26	    parserOptions: {
    27	      project: ['./tsconfig.node.json', './tsconfig.app.json'],
    28	      tsconfigRootDir: import.meta.dirname,
    29	    },
    30	  },
    31	})
    32	```
    33	
    34	You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:
    35	
    36	```js
    37	// eslint.config.js
    38	import reactX from 'eslint-plugin-react-x'
    39	import reactDom from 'eslint-plugin-react-dom'
    40	
    41	export default tseslint.config({
    42	  plugins: {
    43	    // Add the react-x and react-dom plugins
    44	    'react-x': reactX,
    45	    'react-dom': reactDom,
    46	  },
    47	  rules: {
    48	    // other rules...
    49	    // Enable its recommended typescript rules
    50	    ...reactX.configs['recommended-typescript'].rules,
    51	    ...reactDom.configs.recommended.rules,
    52	  },
    53	})
    54	```


===============================================
= File: ./src/App.css 
===============================================

     1	#root {
     2	  max-width: 1280px;
     3	  margin: 0 auto;
     4	  padding: 2rem;
     5	  text-align: center;
     6	}
     7	
     8	.logo {
     9	  height: 6em;
    10	  padding: 1.5em;
    11	  will-change: filter;
    12	  transition: filter 300ms;
    13	}
    14	.logo:hover {
    15	  filter: drop-shadow(0 0 2em #646cffaa);
    16	}
    17	.logo.react:hover {
    18	  filter: drop-shadow(0 0 2em #61dafbaa);
    19	}
    20	
    21	@keyframes logo-spin {
    22	  from {
    23	    transform: rotate(0deg);
    24	  }
    25	  to {
    26	    transform: rotate(360deg);
    27	  }
    28	}
    29	
    30	@media (prefers-reduced-motion: no-preference) {
    31	  a:nth-of-type(2) .logo {
    32	    animation: logo-spin infinite 20s linear;
    33	  }
    34	}
    35	
    36	.card {
    37	  padding: 2em;
    38	}
    39	
    40	.read-the-docs {
    41	  color: #888;
    42	}


===============================================
= File: ./src/App.tsx 
===============================================

     1	// src/App.tsx
     2	import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
     3	import { Suspense, lazy, useEffect } from 'react';
     4	import MainLayout from './components/layout/MainLayout';
     5	import Login from './pages/auth/Login';
     6	import './index.css';
     7	import { useAuthStore } from './store/authStore';
     8	import { ConfirmDialogProvider } from './components/ui/ConfirmDialog';
     9	import OfflineAlert from './components/ui/OfflineAlert';
    10	
    11	// Lazy load pages
    12	const Dashboard = lazy(() => import('./pages/dashboard/Dashboard'));
    13	const ItemList = lazy(() => import('./pages/master-data/ItemList'));
    14	const CategoryList = lazy(() => import('./pages/master-data/CategoryList'));
    15	const UnitList = lazy(() => import('./pages/master-data/UnitList'));
    16	const TypeList = lazy(() => import('./pages/master-data/TypeList'));
    17	const AddItem = lazy(() => import('./pages/master-data/AddItem'));
    18	const SupplierList = lazy(() => import('./pages/master-data/SupplierList'));
    19	const UploadInvoice = lazy(() => import('./pages/purchases/UploadInvoice'));
    20	const PurchaseList = lazy(() => import('./pages/purchases/PurchaseList'));
    21	const CreatePurchase = lazy(() => import('./pages/purchases/CreatePurchase'));
    22	const Profile = lazy(() => import('./pages/settings/Profile'));
    23	const PrintPurchase = lazy(() => import('./pages/purchases/PrintPurchase'));
    24	const ViewPurchase = lazy(() => import('./pages/purchases/ViewPurchase'));
    25	// Tambahkan halaman lain sesuai kebutuhan
    26	
    27	// Komponen placeholder untuk halaman yang belum diimplementasi
    28	const ComingSoon = ({ title }: { title: string }) => {
    29	  return (
    30	    <div className="flex flex-col items-center justify-center min-h-[50vh] text-gray-500">
    31	      <h2 className="text-2xl font-bold mb-4">{title}</h2>
    32	      <p className="text-xl">Fitur ini akan segera hadir!</p>
    33	      <div className="mt-8 p-4 border border-blue-300 rounded-lg bg-blue-50 max-w-md">
    34	        <p className="text-blue-600 text-center">
    35	          Halaman ini sedang dalam pengembangan.
    36	        </p>
    37	      </div>
    38	    </div>
    39	  );
    40	};
    41	
    42	function App() {
    43	  const { session, initialize } = useAuthStore();
    44	
    45	  // Inisialisasi auth state saat aplikasi dimuat
    46	  useEffect(() => {
    47	    initialize();
    48	  }, [initialize]);
    49	
    50	
    51	  return (
    52	    <ConfirmDialogProvider>
    53	      <Router future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>
    54	        <OfflineAlert />
    55	        <Routes>
    56	          <Route path="/login" element={!session ? <Login /> : <Navigate to="/" />} />
    57	
    58	          {/* Route khusus untuk tampilan cetak - tanpa layout */}
    59	          <Route path="/purchases/print-view" element={
    60	            <Suspense fallback={<div>Loading...</div>}>
    61	              <PrintPurchase />
    62	            </Suspense>} />
    63	
    64	          <Route path="/" element={session ? <MainLayout /> : <Navigate to="/login" />}>
    65	            <Route
    66	              index
    67	              element={
    68	              <div className="text-gray-800">
    69	                <Suspense fallback={<div>Loading...</div>}>
    70	                  <Dashboard />
    71	                </Suspense>
    72	              </div>
    73	            } />
    74	
    75	            <Route path="master-data">
    76	              <Route path="items" element={
    77	                <Suspense fallback={<div>Loading...</div>}>
    78	                  <ItemList />
    79	                </Suspense>
    80	              } />
    81	              <Route path="items/add" element={
    82	                <Suspense fallback={<div>Loading...</div>}>
    83	                  <AddItem />
    84	                </Suspense>
    85	              } />
    86	              <Route path="items/edit/:id" element={
    87	                <Suspense fallback={<div>Loading...</div>}>
    88	                  <AddItem />
    89	                </Suspense>
    90	              } />
    91	              <Route path="categories" element={
    92	                <Suspense fallback={<div>Loading...</div>}>
    93	                  <CategoryList />
    94	                </Suspense>
    95	              } />
    96	              <Route path="types" element={
    97	                <Suspense fallback={<div>Loading...</div>}>
    98	                  <TypeList />
    99	                </Suspense>
   100	              } />
   101	              <Route path="units" element={
   102	                <Suspense fallback={<div>Loading...</div>}>
   103	                  <UnitList />
   104	                </Suspense>
   105	              } />
   106	               <Route path="suppliers" element={
   107	                <Suspense fallback={<div>Loading...</div>}>
   108	                  <SupplierList />
   109	                </Suspense>
   110	               } />
   111	              {/* Tambahkan route lain sesuai kebutuhan (e.g., /add, /edit/:id for suppliers) */}
   112	            </Route>
   113	
   114	            <Route path="purchases">
   115	              <Route
   116	                index
   117	                element={
   118	                  <Suspense fallback={<div>Loading...</div>}>
   119	                    <PurchaseList />
   120	                  </Suspense>
   121	                }
   122	              />
   123	              <Route
   124	                path="create"
   125	                element={
   126	                  <Suspense fallback={<div>Loading...</div>}>
   127	                    <CreatePurchase />
   128	                  </Suspense>
   129	                }
   130	              />
   131	              <Route
   132	                path="upload-invoice"
   133	                element={
   134	                  <Suspense fallback={<div>Loading...</div>}>
   135	                    <UploadInvoice />
   136	                  </Suspense>
   137	                }
   138	              />
   139	              <Route
   140	                path="view/:id"
   141	                element={
   142	                  <Suspense fallback={<div>Loading...</div>}>
   143	                    <ViewPurchase />
   144	                  </Suspense>
   145	                }
   146	              />
   147	              <Route path="orders" element={<ComingSoon title="Daftar Pesanan Beli" />} />
   148	              <Route path="price-history" element={<ComingSoon title="Riwayat Harga Beli" />} />
   149	            </Route>
   150	
   151	            <Route path="inventory">
   152	              <Route
   153	                index
   154	                element={<ComingSoon title="Persediaan" />}
   155	              />
   156	              <Route
   157	                path="stock"
   158	                element={<ComingSoon title="Stok Obat" />}
   159	              />
   160	              <Route
   161	                path="stock-opname"
   162	                element={<ComingSoon title="Stok Opname" />}
   163	              />
   164	              <Route
   165	                path="expired"
   166	                element={<ComingSoon title="Obat Kadaluarsa" />}
   167	              />
   168	            </Route>
   169	
   170	            <Route path="sales">
   171	              <Route
   172	                index
   173	                element={<ComingSoon title="Daftar Penjualan" />}
   174	              />
   175	              <Route
   176	                path="create"
   177	                element={<ComingSoon title="Tambah Penjualan" />}
   178	              />
   179	            </Route>
   180	
   181	            <Route path="clinic">
   182	              <Route
   183	                index
   184	                element={<ComingSoon title="Klinik" />}
   185	              />
   186	              <Route
   187	                path="patients"
   188	                element={<ComingSoon title="Daftar Pasien" />}
   189	              />
   190	              <Route
   191	                path="queue"
   192	                element={<ComingSoon title="Antrian" />}
   193	              />
   194	              <Route
   195	                path="medical-records"
   196	                element={<ComingSoon title="Rekam Medis" />}
   197	              />
   198	            </Route>
   199	
   200	            <Route path="reports">
   201	              <Route index element={<ComingSoon title="Laporan" />} />
   202	              <Route path="sales" element={<ComingSoon title="Laporan Penjualan" />} />
   203	              <Route path="purchases" element={<ComingSoon title="Laporan Pembelian" />} />
   204	              <Route path="stock" element={<ComingSoon title="Laporan Stok" />} />
   205	            </Route>
   206	
   207	            <Route path="settings">
   208	              <Route path="profile" element={
   209	                <Suspense fallback={<div>Loading...</div>}>
   210	                  <Profile />
   211	                </Suspense>
   212	              } />
   213	              <Route path="users" element={<ComingSoon title="Pengguna" />} />
   214	              <Route path="app" element={<ComingSoon title="Pengaturan Aplikasi" />} />
   215	            </Route>
   216	            {/* Tambahkan route untuk modul lain */}
   217	          </Route>
   218	        </Routes>
   219	      </Router>
   220	    </ConfirmDialogProvider>
   221	  );
   222	}
   223	
   224	export default App;


===============================================
= File: ./src/components/layout/MainLayout.tsx 
===============================================

     1	import { useState } from "react";
     2	import { Outlet } from "react-router-dom";
     3	import Navbar from "./Navbar";
     4	import Sidebar from "./Sidebar";
     5	
     6	const MainLayout = () => {
     7	    const [sidebarCollapsed, setSidebarCollapsed] = useState(false);
     8	
     9	    const toggleSidebar = () => {
    10	        setSidebarCollapsed(!sidebarCollapsed);
    11	    };
    12	
    13	    return (
    14	        <div className="flex h-screen bg-gray-100 text-gray-800">
    15	            <Sidebar collapsed={sidebarCollapsed} toggleSidebar={toggleSidebar} />
    16	
    17	            <div className="flex flex-col flex-1 overflow-hidden">
    18	                <Navbar sidebarCollapsed={sidebarCollapsed} />
    19	
    20	                <main className="flex-1 overflow-y-auto p-4 text-gray-800">
    21	                    <Outlet />
    22	                </main>
    23	            </div>
    24	        </div>
    25	    );
    26	};
    27	
    28	export default MainLayout;


===============================================
= File: ./src/components/layout/Navbar.tsx 
===============================================

     1	// src/components/layout/Navbar.tsx
     2	import { useState, useEffect } from 'react'; // Import useEffect
     3	import { useAuthStore } from '../../store/authStore';
     4	import { Button } from '../ui/Button';
     5	// Import motion and AnimatePresence from framer-motion
     6	import { motion, AnimatePresence } from 'framer-motion';
     7	
     8	// Define props interface
     9	interface NavbarProps {
    10	    sidebarCollapsed: boolean;
    11	}
    12	
    13	const Navbar = ({ sidebarCollapsed }: NavbarProps) => {
    14	    const { user, logout } = useAuthStore();
    15	    const [dropdownOpen, setDropdownOpen] = useState(false);
    16	    const [currentTime, setCurrentTime] = useState('');
    17	
    18	    const toggleDropdown = () => {
    19	        setDropdownOpen(!dropdownOpen);
    20	    };
    21	
    22	    const handleLogout = async () => {
    23	        await logout();
    24	    };
    25	
    26	    // Effect to update time every second
    27	    useEffect(() => {
    28	        const timerId = setInterval(() => {
    29	            const now = new Date();
    30	            const optionsDate: Intl.DateTimeFormatOptions = {
    31	                weekday: 'short', year: 'numeric', month: 'short', day: 'numeric',
    32	            };
    33	            
    34	            // Format time manually to use colons instead of dots
    35	            const hours = String(now.getHours()).padStart(2, '0');
    36	            const minutes = String(now.getMinutes()).padStart(2, '0');
    37	            const seconds = String(now.getSeconds()).padStart(2, '0');
    38	            const timeString = `${hours}:${minutes}:${seconds}`;
    39	            
    40	            const formattedTime = `${now.toLocaleDateString('id-ID', optionsDate)} - ${timeString}`;
    41	            setCurrentTime(formattedTime);
    42	        }, 1000);
    43	
    44	        // Cleanup interval on component unmount
    45	        return () => {
    46	            clearInterval(timerId);
    47	        };
    48	    }, []); // Empty dependency array ensures this runs only once on mount
    49	
    50	    return (
    51	        <nav className="bg-white border-b px-6 py-3">
    52	            {/* Use grid for three columns: Title, Clock, User Menu */}
    53	            <div className="grid grid-cols-[1fr,auto,1fr] items-center">
    54	                {/* Left: Title (conditionally animated) */}
    55	                <div className="flex items-center h-8">
    56	                    <AnimatePresence mode="wait">
    57	                        <motion.h1
    58	                            key={sidebarCollapsed ? 'PharmaSys' : 'Pharmacy System App'}
    59	                            initial={{ opacity: 0, x: -10 }}
    60	                            animate={{ opacity: 1, x: 0 }}
    61	                            exit={{ opacity: 0, x: 10 }}
    62	                            transition={{ duration: 0.2 }}
    63	                            className="text-xl font-semibold text-gray-800 transition-opacity duration-300 ease-in-out"
    64	                        >
    65	                            {sidebarCollapsed ? 'PharmaSys' : 'Pharmacy System App'}
    66	                        </motion.h1>
    67	                    </AnimatePresence>
    68	                </div>
    69	                {/* Center: Real-time Clock */}
    70	                <div className="text-center">
    71	                    <span className="text-md font-mono text-blue-700 tracking-tight">
    72	                        {currentTime || 'Memuat...'} {/* Display current time */}
    73	                    </span>
    74	                </div>
    75	
    76	                {/* Right: User Dropdown */}
    77	                <div className="relative flex justify-end">
    78	                    <button
    79	                        className="flex items-center space-x-2"
    80	                        onClick={toggleDropdown}
    81	                    >
    82	                        <div className="w-8 h-8 rounded-full bg-primary text-white flex items-center justify-center">
    83	                            {/* Display first letter of user name or 'U' */}
    84	                            {user?.name ? user.name.charAt(0).toUpperCase() : 'U'}
    85	                        </div>
    86	                        <span className="font-medium">{user?.name || 'User'}</span>
    87	                    </button>
    88	
    89	                    {dropdownOpen && (
    90	                        <div className="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10">
    91	                            <div className="py-1">
    92	                                <Button
    93	                                    variant="outline"
    94	                                    className="w-full justify-start rounded-none"
    95	                                    onClick={handleLogout}
    96	                                >
    97	                                    Logout
    98	                                </Button>
    99	                            </div>
   100	                        </div>
   101	                    )}
   102	                </div>
   103	            </div>
   104	        </nav>
   105	    );
   106	};
   107	
   108	export default Navbar;


===============================================
= File: ./src/components/layout/Sidebar.tsx 
===============================================

