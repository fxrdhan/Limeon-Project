SQL Definition of doctors

create table public.doctors (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  specialization character varying(100) null,
  license_number character varying(50) null,
  phone character varying(20) null,
  email character varying(100) null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint doctors_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on doctors for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of item_categories

create table public.item_categories (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  description text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint medicine_categories_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on item_categories for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of item_types

create table public.item_types (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  description text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint medicine_types_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on item_types for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of item_units

create table public.item_units (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(50) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  description text null,
  constraint medicine_units_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on item_units for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of items

create table public.items (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  sell_price numeric(15, 2) not null default 0,
  stock integer not null default 0,
  min_stock integer null default 10,
  description text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  is_active boolean null default true,
  code character varying null,
  rack character varying null,
  has_expiry_date boolean null default false,
  is_medicine boolean null default true,
  category_id uuid null,
  type_id uuid null,
  unit_id uuid null,
  base_unit text null,
  base_price numeric(15, 2) null default 0,
  unit_conversions jsonb null default '[]'::jsonb,
  constraint medicines_pkey primary key (id),
  constraint medicines_category_id_fkey foreign KEY (category_id) references item_categories (id),
  constraint medicines_type_id_fkey foreign KEY (type_id) references item_types (id),
  constraint medicines_unit_id_fkey foreign KEY (unit_id) references item_units (id),
  constraint check_base_price_not_negative check ((base_price >= (0)::numeric))
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on items for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of patients

create table public.patients (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  gender character varying(10) null,
  birth_date date null,
  address text null,
  phone character varying(20) null,
  email character varying(100) null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint patients_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on patients for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of purchase_items

create table public.purchase_items (
  id uuid not null default extensions.uuid_generate_v4 (),
  purchase_id uuid null,
  item_id uuid null,
  quantity integer not null,
  price numeric(15, 2) not null,
  subtotal numeric(15, 2) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  batch_no character varying(50) null,
  expiry_date date null,
  unit character varying(50) null,
  constraint purchase_items_pkey primary key (id),
  constraint purchase_items_item_id_fkey foreign KEY (item_id) references items (id),
  constraint purchase_items_purchase_id_fkey foreign KEY (purchase_id) references purchases (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_purchase_items_batch_no on public.purchase_items using btree (batch_no) TABLESPACE pg_default;

create index IF not exists idx_purchase_items_expiry_date on public.purchase_items using btree (expiry_date) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on purchase_items for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of purchases

create table public.purchases (
  id uuid not null default extensions.uuid_generate_v4 (),
  supplier_id uuid null,
  invoice_number character varying(50) null,
  date date not null,
  total numeric(15, 2) not null default 0,
  payment_status character varying(20) null default 'unpaid'::character varying,
  payment_method character varying(20) null,
  notes text null,
  created_by uuid null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  so_number character varying(50) null,
  due_date date null,
  vat_amount numeric(15, 2) null default 0,
  vat_percentage numeric(5, 2) null default 11.0,
  is_vat_included boolean null default true,
  constraint purchases_pkey primary key (id),
  constraint purchases_created_by_fkey foreign KEY (created_by) references users (id),
  constraint purchases_supplier_id_fkey foreign KEY (supplier_id) references suppliers (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on purchases for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of sale_items

create table public.sale_items (
  id uuid not null default extensions.uuid_generate_v4 (),
  sale_id uuid null,
  item_id uuid null,
  quantity integer not null,
  price numeric(15, 2) not null,
  subtotal numeric(15, 2) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint sale_items_pkey primary key (id),
  constraint sale_items_medicine_id_fkey foreign KEY (item_id) references items (id),
  constraint sale_items_sale_id_fkey foreign KEY (sale_id) references sales (id) on delete CASCADE
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on sale_items for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of sales

create table public.sales (
  id uuid not null default extensions.uuid_generate_v4 (),
  patient_id uuid null,
  doctor_id uuid null,
  invoice_number character varying(50) null,
  date date not null,
  total numeric(15, 2) not null default 0,
  payment_method character varying(20) null default 'cash'::character varying,
  created_by uuid null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint sales_pkey primary key (id),
  constraint sales_created_by_fkey foreign KEY (created_by) references users (id),
  constraint sales_doctor_id_fkey foreign KEY (doctor_id) references doctors (id),
  constraint sales_patient_id_fkey foreign KEY (patient_id) references patients (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on sales for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of suppliers

create table public.suppliers (
  id uuid not null default extensions.uuid_generate_v4 (),
  name character varying(100) not null,
  address text null,
  phone character varying(20) null,
  email character varying(100) null,
  contact_person character varying(100) null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint suppliers_pkey primary key (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on suppliers for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of unit_conversions

create table public.unit_conversions (
  id uuid not null default gen_random_uuid (),
  item_id uuid null,
  unit_name text not null,
  conversion_rate numeric not null,
  base_price numeric null default 0,
  created_at timestamp with time zone null default now(),
  constraint unit_conversions_pkey primary key (id),
  constraint unit_conversions_item_id_unit_name_key unique (item_id, unit_name),
  constraint unit_conversions_item_id_fkey foreign KEY (item_id) references items (id) on delete CASCADE
) TABLESPACE pg_default;

create trigger after_unit_conversion_delete
after DELETE on unit_conversions for EACH row
execute FUNCTION sync_unit_conversions_to_items ();

create trigger after_unit_conversion_insert
after INSERT on unit_conversions for EACH row
execute FUNCTION sync_unit_conversions_to_items ();

create trigger after_unit_conversion_update
after
update on unit_conversions for EACH row
execute FUNCTION sync_unit_conversions_to_items ();

==============================================================
SQL Definition of users

create table public.users (
  id uuid not null,
  name character varying(100) not null,
  email character varying(100) not null,
  role character varying(20) not null default 'staff'::character varying,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_id_fkey foreign KEY (id) references auth.users (id)
) TABLESPACE pg_default;

create trigger set_updated_at BEFORE
update on users for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of e_invoices

create table public.e_invoices (
  id uuid not null default extensions.uuid_generate_v4 (),
  invoice_number character varying(50) not null,
  invoice_date date not null,
  so_number character varying(50) null,
  due_date date null,
  supplier_name character varying(100) not null,
  supplier_address text null,
  pbf_license_number character varying(50) null,
  dak_license_number character varying(50) null,
  cdob_certificate_number character varying(50) null,
  customer_name character varying(150) not null,
  customer_address text null,
  total_price numeric(15, 2) not null default 0,
  ppn numeric(15, 2) null default 0,
  total_invoice numeric(15, 2) not null default 0,
  checked_by character varying(100) null,
  json_data jsonb null,
  is_processed boolean null default false,
  processing_notes text null,
  related_purchase_id uuid null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint e_invoices_pkey primary key (id),
  constraint e_invoices_invoice_number_key unique (invoice_number)
) TABLESPACE pg_default;

create trigger set_updated_at_e_invoice BEFORE
update on e_invoices for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of e_invoice_items

create table public.e_invoice_items (
  id uuid not null default extensions.uuid_generate_v4 (),
  invoice_id uuid null,
  sku character varying(50) null,
  product_name character varying(200) not null,
  quantity integer not null,
  unit character varying(20) null,
  batch_number character varying(50) null,
  expiry_date character varying(10) null,
  unit_price numeric(15, 2) not null,
  discount numeric(15, 2) null default 0,
  total_price numeric(15, 2) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  unit_id uuid null,
  item_id uuid null,
  constraint e_invoice_items_pkey primary key (id),
  constraint e_invoice_items_invoice_id_fkey foreign KEY (invoice_id) references e_invoices (id) on delete CASCADE,
  constraint e_invoice_items_item_id_fkey foreign KEY (item_id) references items (id) on delete set null,
  constraint e_invoice_items_unit_id_fkey foreign KEY (unit_id) references item_units (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_e_invoice_items_unit_id on public.e_invoice_items using btree (unit_id) TABLESPACE pg_default;

create index IF not exists idx_e_invoice_items_item_id on public.e_invoice_items using btree (item_id) TABLESPACE pg_default;

create trigger set_updated_at_e_invoice_items BEFORE
update on e_invoice_items for EACH row
execute FUNCTION update_updated_at_column ();

==============================================================
SQL Definition of company_profiles

create table public.e_invoice_items (
  id uuid not null default extensions.uuid_generate_v4 (),
  invoice_id uuid null,
  sku character varying(50) null,
  product_name character varying(200) not null,
  quantity integer not null,
  unit character varying(20) null,
  batch_number character varying(50) null,
  expiry_date character varying(10) null,
  unit_price numeric(15, 2) not null,
  discount numeric(15, 2) null default 0,
  total_price numeric(15, 2) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  unit_id uuid null,
  item_id uuid null,
  constraint e_invoice_items_pkey primary key (id),
  constraint e_invoice_items_invoice_id_fkey foreign KEY (invoice_id) references e_invoices (id) on delete CASCADE,
  constraint e_invoice_items_item_id_fkey foreign KEY (item_id) references items (id) on delete set null,
  constraint e_invoice_items_unit_id_fkey foreign KEY (unit_id) references item_units (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_e_invoice_items_unit_id on public.e_invoice_items using btree (unit_id) TABLESPACE pg_default;

create index IF not exists idx_e_invoice_items_item_id on public.e_invoice_items using btree (item_id) TABLESPACE pg_default;

create trigger before_e_invoice_item_insert BEFORE INSERT on e_invoice_items for EACH row
execute FUNCTION process_e_invoice_item ();

create trigger set_updated_at_e_invoice_items BEFORE
update on e_invoice_items for EACH row
execute FUNCTION update_updated_at_column ();